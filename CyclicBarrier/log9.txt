Program state
Id: 8
Exe Stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))))) Ref(int) v1  
Sym Table:  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))))) Ref(int) v1  
Sym Table:  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))))  
Sym Table: v1-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))))  
Sym Table: v1-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))) Ref(int) v2  
Sym Table: v1-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))) Ref(int) v2  
Sym Table: v1-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))))  
Sym Table: v1-(0,int) v2-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))))  
Sym Table: v1-(0,int) v2-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))) Ref(int) v3  
Sym Table: v1-(0,int) v2-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))) Ref(int) v3  
Sym Table: v1-(0,int) v2-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))  
Sym Table: v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))))  
Sym Table: v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))) int cnt  
Sym Table: v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))) int cnt  
Sym Table: v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))  
Sym Table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))))  
Sym Table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))) new(v1, 2)  
Sym Table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))) new(v1, 2)  
Sym Table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap:  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))  
Sym Table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap: 1-2  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))))  
Sym Table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap: 1-2  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))) new(v2, 3)  
Sym Table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap: 1-2  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))) new(v2, 3)  
Sym Table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int)  
Output Console:  
Heap: 1-2  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int)  
Output Console:  
Heap: 1-2 2-3  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int)  
Output Console:  
Heap: 1-2 2-3  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))) new(v3, 4)  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int)  
Output Console:  
Heap: 1-2 2-3  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))) new(v3, 4)  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int)  
Output Console:  
Heap: 1-2 2-3  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (newBarrier(cnt, rH(v2));(fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))) newBarrier(cnt, rH(v2))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))) newBarrier(cnt, rH(v2))  
Sym Table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) ;(fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))) fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))))   
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3)))) fork( (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))))   
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 9
Exe Stack: (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) ;(await(cnt);print(rH(v3))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 9
Exe Stack: (await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (await(cnt);print(rH(v3))) fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))))   
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 9
Exe Stack: (wH(v1,rH(v1)*10);print(rH(v1))) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (await(cnt);print(rH(v3))) fork( (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))))   
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 9
Exe Stack: (wH(v1,rH(v1)*10);print(rH(v1))) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[]}

Program state
Id: 8
Exe Stack: (await(cnt);print(rH(v3)))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 9
Exe Stack: (wH(v1,rH(v1)*10);print(rH(v1)))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 10
Exe Stack: (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 8
Exe Stack: (await(cnt);print(rH(v3)))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 9
Exe Stack: (wH(v1,rH(v1)*10);print(rH(v1)))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 10
Exe Stack: (await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 8
Exe Stack: print(rH(v3)) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 9
Exe Stack: print(rH(v1)) wH(v1,rH(v1)*10)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 8
Exe Stack: print(rH(v3)) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 9
Exe Stack: print(rH(v1)) wH(v1,rH(v1)*10)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) await(cnt)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-2 2-3 3-4  
File table:  
Barrier Table: {1=3=[9]}

Program state
Id: 8
Exe Stack: print(rH(v3))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 9
Exe Stack: print(rH(v1))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 8
Exe Stack: print(rH(v3))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 9
Exe Stack: print(rH(v1))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console:  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 8
Exe Stack:  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 9
Exe Stack:  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);print(rH(v2))) wH(v2,rH(v2)*10)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 8
Exe Stack:  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 9
Exe Stack:  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

Program state
Id: 10
Exe Stack: (wH(v2,rH(v2)*10);print(rH(v2))) wH(v2,rH(v2)*10)  
Sym Table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int)  
Output Console: 4 20  
Heap: 1-20 2-3 3-4  
File table:  
Barrier Table: {1=3=[9, 8, 10]}

